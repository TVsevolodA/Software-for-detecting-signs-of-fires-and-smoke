<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>infoReports</title>
    <!-- BootStrap -->
    <link href=" https://use.fontawesome.com/releases/v6.5.1/css/all.css" rel="stylesheet" >
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <style>
      i { color: darkorange; }
      form { max-width: 35%; }
      main {
        display: flex;
        align-items: flex-start;
        padding: 2% 5%;
      }
      #fieldSearch {
        border-radius: 5px;
        border: 1px solid black;
        margin-bottom: 5%;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: center;
        align-items: center;
      }
      #beginDateTime, #endDateTime { padding: 2% 0% 2% 5%; }
      #buttonSearch {
        border: none;
        outline: none;
        background: none;
      }
      #systemSearch {
        padding: 1%;
        height: min-content;
        margin-right: 1.5%;
      }
      .list-group-item{
        display: flex;
        align-items: center;
        justify-content: flex-start;
      }
      .selection {
        display: flex;
        align-items: start;
        justify-content: space-evenly;
      }
      .list-group { width: 100%; }
      .parameter, #systemSearch {
        border: 1px solid gray;
        border-radius: 10px;
      }
      .parameter { padding: 2%; }
      input[type='checkbox'] {
        width: 20px;
        height: 20px;
        margin-right: 5%;
      }
      td {
        font-weight: 400;
        font-size: 17px;
        font-style: normal;
        font-stretch: normal;
      }
      #resultSelection {
        width: 75%;
      }
      img {
        width: 100%;
        height: 100%;
      }
      a {
        font-size: 20px;
        font-weight: 600;
      }
  </style>
  </head>
  <body>
    <header>
      <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
          <ul class="navbar-nav">
            <li class="nav-item"><a class="nav-link active" aria-current="page" href="http://localhost:5050">Главная</a></li>
            <li class="nav-item"><a class="nav-link active" aria-current="page" href="#">Управление БД</a></li>
            <li class="nav-item"><a class="nav-link active" aria-current="page" href="http://localhost:5050/managingRoles">Роли</a></li>
          </ul>
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="http://localhost:5050/profile">
                <i class="bi bi-person-circle h1"></i>
              </a>
            </li>
          </ul>
        </div>
      </nav>
    </header>
    <main>
      <form action="" id="systemSearch" onSubmit="return false;">
        <div class="input-group mb-3 parameter">
          <input type="text" class="form-control" id="camera_name" placeholder="Наименование камеры" onkeyup="searchMatches(event)">
          <button type="button" class="btn btn-light">
            <i class="fas fa-magnifying-glass"></i>
          </button>
        </div>

        <div class="input-group mb-3 parameter">
          <span class="input-group-text" style="width: 100%;">Время события</span>
          <div class="input-group m-3">
            <span class="input-group-text" id="basic-addon1">С</span>
            <input type="datetime-local" class="form-control" id="beginDateTime" placeholder="ДД-ММ-ГГГГ ЧЧ:ММ" onkeyup="searchMatches(event)">
            <span class="input-group-text" id="basic-addon1">по</span>
            <input type="datetime-local" class="form-control" id="endDateTime" placeholder="ДД-ММ-ГГГГ ЧЧ:ММ" onkeyup="searchMatches(event)">
            <button type="button" class="btn btn-light">
              <i class="fas fa-magnifying-glass"></i>
            </button>
          </div>
        </div>

        <div class="input-group mb-3 parameter">
          <ul class="list-group list-group-flush">
            <span class="input-group-text">Статус</span>
            <li class="list-group-item list-group-item-action">
              <input type="checkbox" class="form-check-input me-1 event_based" value="False" aria-label="..." onclick="filtering(1, 'event_based')" />
              Обработанные
            </li>
            <li class="list-group-item list-group-item-action">
              <input type="checkbox" class="form-check-input me-1 event_based" value="True" aria-label="..." onclick="filtering(1, 'event_based')" />
              Необработанные
            </li>
          </ul>
        </div>
      </form>
      <div id="resultSelection"></div>
    </main>
    <!-- BootStrap -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script>
      //@ts-check
      const reports = {{{reports}}};
      let resultSelection = document.getElementById('resultSelection');

      for (let report of reports)
      {
        const buttonArrange = !report.report_compiled ? 
        `<div class="mb-3" id="arrange_${report.report_id}">
          <button type="button" class="btn btn-warning" id="${report.report_id}" value="True"><a href="/updateReport/${report.report_id}" class="link-underline link-underline-opacity-0">Закончить оформление</a></button>
        </div>`
        :
        `<div class="mb-3" id="arrange_${report.report_id}">
          <button type="button" class="btn btn-link" id="${report.report_id}" value="False"><a href="/getReportById/${report.report_id}" class="link-primary">Перейти к отчету</a>
        </div>`;

        const dtIncident = new Date(report.datetime);
        const dtDate = dtIncident.getDate() < 10 ? '0' + dtIncident.getDate() : dtIncident.getDate();
        const dtMonth = dtIncident.getMonth() + 1 < 10 ? '0' + (dtIncident.getMonth() + 1) : (dtIncident.getMonth() + 1);
        const timeDisplay = dtDate + '-' + dtMonth + '-' + dtIncident.getFullYear() + ' ' + dtIncident.getHours() + ':' + dtIncident.getMinutes();

        resultSelection.innerHTML +=
        `<div class="card mb-3" id="block_${report.report_id}">
          <div class="row g-0">
            <figure class="figure col-md-5"  id="picture">
              <img src="data:image/png; base64, ${report.captured_image}" alt="Не удалось получить доступ к камере" class="figure-img img-fluid rounded">
              <figcaption class="figure-caption" id="figcaption_${report.name_camera}">Получено с камеры ${report.name_camera}</figcaption>
            </figure>
            <div class="col-md-7" id="information">
              <div class="card-body">
                <div class="mb-3">
                  <label for="dateTimeIncident" class="form-label">Время</label>
                  <input type="text" class="form-control" id="dateTimeIncident" readonly value="${timeDisplay}">
                </div>
                <div class="mb-3">
                  <label for="placeIncident" class="form-label">Место</label>
                  <input type="text" class="form-control" id="placeIncident" readonly value="${report.address}">
                </div>
                <div class="mb-3">
                  <label for="signsIncident" class="form-label">Обнаруженные признаки</label>
                  <textarea class="form-control" id="signsIncident" rows="2" readonly>${report.type_event}</textarea>
                </div>
                ${buttonArrange}
              </div>
            </div>
          </div>
        </div>`;
      }

      // Фильтрация
      const reportsBlock = document.getElementsByClassName('card');
      function filtering(indexParameter, titleParameter) {
        let inputStatus = document.getElementsByClassName(titleParameter);
        let arrValueChecked = new Map();
        for (let i = 0; i < inputStatus.length; i++) {
          arrValueChecked.set(inputStatus[i].value, inputStatus[i].checked);
        }
        const values = new Set(arrValueChecked.values());
        if (values.size === 1) displayReport();
        else {
          arrValueChecked.forEach((value, key, map) => {
            key = key.toUpperCase();
            if (value) {
              for (let i = 0; i < reportsBlock.length; i++) {
                const idBlock = reportsBlock[i].id.replace('block_', '');
                const statusReport = document.getElementById(idBlock).value.toUpperCase();
                if (key === statusReport) { // Отчет не оформлен
                  reportsBlock[i].style.display = "flex";
                }
                else reportsBlock[i].style.display = "none";
              }
            }
          });
        }
      }

      /// Отображение необходимых полей
      function displayReport(numberRows = 'all') {
        if (numberRows === 'all') {
          for (i = 0; i < reportsBlock.length; i++) {
            reportsBlock[i].style.display = "";
          }
        }
        else reportsBlock[Number(numberRows)].style.display = "";
      }

      /// Поле поиска
      function searchMatches(event) {
        const searchCameraName = document.getElementById('camera_name').value.toUpperCase();
        let searchBeginDateTime = document.getElementById('beginDateTime').value;
        let searchEndDateTime = document.getElementById('endDateTime').value;
        searchBeginDateTime = searchBeginDateTime.length === 0 ? null : new Date(searchBeginDateTime).getTime();
        searchEndDateTime = searchEndDateTime.length === 0 ? null : new Date(searchEndDateTime).getTime();
        for (let i = 0; i < reportsBlock.length; i++) {
          const idBlock = reportsBlock[i].id.replace('block_', '');
          const nameCamera = reportsBlock[i].getElementsByTagName('figcaption')[0].innerText.replace('Получено с камеры ', '').toUpperCase();
          let dateTimeIncident = new Date(reportsBlock[i].getElementsByClassName('mb-3')[0].getElementsByTagName('input')[0].value).getTime();
          if (searchCameraName.length !== 0) {
            if (nameCamera.indexOf(searchCameraName) > -1) displayReport(i);
            else reportsBlock[i].style.display = "none";
          }
          else displayReport();
          if (searchBeginDateTime || searchEndDateTime) {
            if (searchBeginDateTime && searchEndDateTime) {
              if (dateTimeIncident > searchBeginDateTime
              && searchEndDateTime > dateTimeIncident) displayReport(i);
              else reportsBlock[i].style.display = "none";
            }
            else if (searchBeginDateTime && !searchEndDateTime) {
              if (dateTimeIncident > searchBeginDateTime) displayReport(i);
              else reportsBlock[i].style.display = "none";
            }
            else if (!searchBeginDateTime && searchEndDateTime) {
              if (searchEndDateTime > dateTimeIncident) displayReport(i);
              else reportsBlock[i].style.display = "none";
            }
            else reportsBlock[i].style.display = "none";
          }
        }
      }
    </script>
  </body>
</html>